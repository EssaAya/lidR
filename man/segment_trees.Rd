% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lastrees.r
\name{segment_trees}
\alias{segment_trees}
\title{Individual tree segmentation}
\usage{
segment_trees(las, algorithm, attribute = "treeID", uniqueness = "incremental")
}
\arguments{
\item{las}{An object of class \link[lidR:LAS-class]{LAS} or \link[lidR:LAScatalog-class]{LAScatalog}.}

\item{algorithm}{function. An algorithm of individual tree segmentation. \code{lidR} has:
\link{dalponte2016}, \link{watershed}, \link{mcwatershed}, \link{li2012} and \link{silva2016}.
More experimental algorithms may be found in the package \href{https://github.com/Jean-Romain/lidRplugins}{lidRplugins}.}

\item{attribute}{character. The returned LAS object as a new extra byte attribute (in a new column).
This parameter controls the name of the new attribute. Default is \code{"treeID"}.}

\item{uniqueness}{character. A method to compute a unique ID. Can be 'incremental', 'gpstime' or
'bitmerge'. See section 'Uniqueness'. This feature must be considered as 'experimental'.}
}
\value{
If the input is a \code{LAS} object, return a \code{LAS} object. If the input is a
\code{LAScatalog}, returns a \code{LAScatalog}.
}
\description{
Individual tree segmentation with several possible algorithms. The returned point cloud has a new
extra byte attribute named after the parameter \code{attribute} independently of the algorithm used.
}
\section{Uniqueness}{


By default the trees IDs are numbered from 1 to n, n being the number of tree found. The problem
with such incremental numbering is that, while it ensure to get a unique ID for each tree in
a given point-cloud it also gurantees to have duplicated tree IDs in different tiles or chunks when
processing a \code{LAScatalog} because each file is processed independently of the other, potentially
in parallel on different computers. Thus the index restart to 1 on each file or chunk. Worst, a
tree that belongs exactly between 2 files will have two different IDs for its two halfs.

This is why \code{segment_trees} was not able to process a \code{LAScatalog} until v2.3.0.

\describe{
\item{incremental}{Number from 0 to n. This methods does not ensure unicity of the IDs.}
\item{gpstime}{This method uses the gpstime of the highest point of a tree (apex) to create a
unique ID. This ID is not a integer but a 64 bits decimal number which is suboptimal but at
least it is unique \bold{if tgpstime attribute is properly populated}. Moreover it ensure that
two halfs of a trees on the edge of a processing chunk will be attributed with the same ID.}
\item{bitmerge}{This method uses the XY coordinates of the highest point of a tree (apex) to
create a single number with a bitwise operation. First XY are converted back to integers with the
scales and offsets given in the header of point-cloud. Then the ID is computed by X * 2^32 + Y
to combine all the information. For example if X = 10 and Y = 25 the ID is 21474836505.
Such methods also returns a 64 bits decimal number but this time the number corresponds to an
integer that is guranteed to be unique \bold{if all files have the same offsets and scale factors}.}
}

All the proposed options are suboptimal because they either do not guarantee uniqueness or they
implies that IDs are based on non integers meaningless numbers. But at least it works.
}

\section{Working with a \code{LAScatalog}}{

This section appears in each function that supports a LAScatalog as input.\cr

In \code{lidR} when the input of a function is a \link[lidR:LAScatalog-class]{LAScatalog} the
function uses the LAScatalog processing engine. The user can modify the engine options using
the \link[lidR:catalog_options_tools]{available options}. A careful reading of the
\link[lidR:LAScatalog-class]{engine documentation} is recommended before processing \code{LAScatalogs}. Each
\code{lidR} function should come with a section that documents the supported engine options.\cr

The \code{LAScatalog} engine supports \code{.lax} files that \emph{significantly} improve the computation
speed of spatial queries using a spatial index. Users should really take advantage a \code{.lax} files,
but this is not mandatory.\cr
}

\examples{
LASfile <- system.file("extdata", "MixedConifer.laz", package="lidR")
las <- readLAS(LASfile, select = "xyz", filter = "-drop_z_below 0")

# Using Li et al. (2012)
las <- segment_trees(las, li2012(R = 3, speed_up = 5))
plot(las, color = "treeID")
}
